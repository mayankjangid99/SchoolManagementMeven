package com.school.common.model;

// Generated Apr 2, 2016 3:30:20 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.springframework.format.annotation.DateTimeFormat;

/**
 * StudentDetails generated by hbm2java
 */
@Entity
@Table(name = "student_details")
public class StudentDetailsModel implements java.io.Serializable {

	private static final long serialVersionUID = 3524177373972674118L;

	private Long StudentDetailsId;
	private String admissionNo;
	private Set<AdmissionDetailsModel> admissionDetailses = new HashSet<AdmissionDetailsModel>(0);
	private String age;
	private String category;
	private String createdBy;
	private Date createdOn = new Date();
	private Date dateOfBirth;
	private String gender;
	private String modifiedBy;
	private Date modifiedOn;
	private String previousSchoolName;
	private String address;
	private String email;
	private String firstName;
	private String image;
	private String lastName;
	private String middleName;
	private String studentMobile;
	private String fullname;
	private ParentDetailsModel parentDetails;

	public StudentDetailsModel() {
	}
	

	public StudentDetailsModel(Long studentDetailsId) {
		super();
		StudentDetailsId = studentDetailsId;
	}



	public StudentDetailsModel(String admissionNo, Date dateOfBirth, String gender,
			String firstName, String lastName) {
		this.admissionNo = admissionNo;
		this.dateOfBirth = dateOfBirth;
		this.gender = gender;
		this.firstName = firstName;
		this.lastName = lastName;
	}

	public StudentDetailsModel(String admissionNo, String age, String category,
			String createdBy, Date createdOn, Date dateOfBirth, String gender,
			String modifiedBy, Date modifiedOn, String previousSchoolName,
			String address, String email, String firstName, String image,
			String lastName, String middleName, String studentMobile, ParentDetailsModel parentDetails) {
		this.admissionNo = admissionNo;
		this.age = age;
		this.category = category;
		this.createdBy = createdBy;
		this.createdOn = createdOn;
		this.dateOfBirth = dateOfBirth;
		this.gender = gender;
		this.modifiedBy = modifiedBy;
		this.modifiedOn = modifiedOn;
		this.previousSchoolName = previousSchoolName;
		this.address = address;
		this.email = email;
		this.firstName = firstName;
		this.image = image;
		this.lastName = lastName;
		this.middleName = middleName;
		this.studentMobile = studentMobile;
		this.parentDetails = parentDetails;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "student_details_id", nullable = false)
	public Long getStudentDetailsId() {
		return StudentDetailsId;
	}


	public void setStudentDetailsId(Long studentDetailsId) {
		StudentDetailsId = studentDetailsId;
	}
		
	
	@Column(name = "admission_no", nullable = false, length = 10)
	public String getAdmissionNo() {
		return this.admissionNo;
	}

	public void setAdmissionNo(String admissionNo) {
		this.admissionNo = admissionNo;
	}

	/**
	 * @return the admissionDetailses
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "studentDetails")
	public Set<AdmissionDetailsModel> getAdmissionDetailses() {
		return admissionDetailses;
	}


	/**
	 * @param admissionDetailses the admissionDetailses to set
	 */
	public void setAdmissionDetailses(Set<AdmissionDetailsModel> admissionDetailses) {
		this.admissionDetailses = admissionDetailses;
	}


	@Column(name = "age", length = 2)
	public String getAge() {
		return this.age;
	}

	public void setAge(String age) {
		this.age = age;
	}

	@Column(name = "category", length = 5)
	public String getCategory() {
		return this.category;
	}

	public void setCategory(String category) {
		this.category = category;
	}

	@Column(name = "created_by", length = 50)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_on")
	public Date getCreatedOn() {
		return this.createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@DateTimeFormat(pattern = "dd-MM-yyyy")
	@Temporal(TemporalType.DATE)
	@Column(name = "date_of_birth", nullable = false, length = 0)
	public Date getDateOfBirth() {
		return this.dateOfBirth;
	}

	public void setDateOfBirth(Date dateOfBirth) {
		this.dateOfBirth = dateOfBirth;
	}

	@Column(name = "gender", nullable = false, length = 1)
	public String getGender() {
		return this.gender;
	}

	public void setGender(String gender) {
		this.gender = gender;
	}

	@Column(name = "modified_by", length = 50)
	public String getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(String modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modified_on")
	public Date getModifiedOn() {
		return this.modifiedOn;
	}

	public void setModifiedOn(Date modifiedOn) {
		this.modifiedOn = modifiedOn;
	}

	@Column(name = "previous_school_name", length = 100)
	public String getPreviousSchoolName() {
		return this.previousSchoolName;
	}

	public void setPreviousSchoolName(String previousSchoolName) {
		this.previousSchoolName = previousSchoolName;
	}

	@Column(name = "address")
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "email", length = 50)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "first_name", nullable = false, length = 50)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "image", length = 50)
	public String getImage() {
		return this.image;
	}

	public void setImage(String image) {
		this.image = image;
	}

	@Column(name = "last_name", nullable = false, length = 50)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "middle_name", length = 50)
	public String getMiddleName() {
		return this.middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	@Column(name = "student_mobile", length = 15)
	public String getStudentMobile() {
		return this.studentMobile;
	}

	public void setStudentMobile(String studentMobile) {
		this.studentMobile = studentMobile;
	}

	@Transient
	public String getFullname() {
		if(!"".equals(this.middleName) && this.middleName != null)
		{
			this.fullname = this.firstName + " " + this.middleName + " " + this.lastName;
		}
		else
		{
			this.fullname = this.firstName + " " + this.lastName;
		}
		return this.fullname;
	}

	public void setFullname(String fullname) {
		this.fullname = fullname;
	}

	@OneToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "parent_details_id", nullable = false)
	public ParentDetailsModel getParentDetails() {
		return parentDetails;
	}

	public void setParentDetails(ParentDetailsModel parentDetails) {
		this.parentDetails = parentDetails;
	}
	
	
}
