package com.school.common.model;

// Generated Apr 2, 2016 3:30:20 PM by Hibernate Tools 4.3.1

import java.util.Date;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.UniqueConstraint;

/**
 * AdmissionDetails generated by hbm2java
 */
@Entity
@Table(name = "admission_details", uniqueConstraints = @UniqueConstraint(columnNames = {
		 "roll_no", "admission_number_id","class_code", "section_code", "session_code", "school_code", "student_details_id" }))
public class AdmissionDetailsModel implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 4116545681092039251L;
	private long admissionDetailsId;
	private AdmissionNumberModel admissionNumber;
	private ClassInformationModel classInformation;
	private SessionDetailsModel sessionDetails;
	private SectionInformationModel sectionInformation;
	private SchoolProfileModel schoolProfile;
	private Date admissionDate;
	private String createdBy;
	private String modifiedBy;
	private Date modifiedOn;
	private Integer rollNo;
	private String status;
	private Date createdOn = new Date();
	private StudentDetailsModel studentDetails;
	private Set<StudentAttendanceSmsDetailsModel> attendanceSmsDetailses = new HashSet<StudentAttendanceSmsDetailsModel>(
			0);
	private Set<StudentAttendanceEmailDetailsModel> attendanceEmailDetailses = new HashSet<StudentAttendanceEmailDetailsModel>(
			0);
	private Set<StudentAttendanceDetailsModel> attendanceDetailses = new HashSet<StudentAttendanceDetailsModel>(
			0);

	public AdmissionDetailsModel() {
	}

	public AdmissionDetailsModel(long admissionDetailsId,
			AdmissionNumberModel admissionNumber, ClassInformationModel classInformation,
			SessionDetailsModel sessionDetails, SectionInformationModel sectionInformation,
			SchoolProfileModel schoolProfile, Date createdOn, String modifiedBy, Date modifiedOn) {
		this.admissionDetailsId = admissionDetailsId;
		this.admissionNumber = admissionNumber;
		this.classInformation = classInformation;
		this.sessionDetails = sessionDetails;
		this.sectionInformation = sectionInformation;
		this.schoolProfile = schoolProfile;
		this.createdOn = createdOn;
		this.modifiedBy = modifiedBy;
		this.modifiedOn = modifiedOn;
	}


	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(name = "admission_details_id", unique = true, nullable = false)
	public long getAdmissionDetailsId() {
		return this.admissionDetailsId;
	}

	public void setAdmissionDetailsId(long admissionDetailsId) {
		this.admissionDetailsId = admissionDetailsId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "admission_number_id", nullable = false)
	public AdmissionNumberModel getAdmissionNumber() {
		return this.admissionNumber;
	}

	public void setAdmissionNumber(AdmissionNumberModel admissionNumber) {
		this.admissionNumber = admissionNumber;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "class_code", nullable = false)
	public ClassInformationModel getClassInformation() {
		return this.classInformation;
	}

	public void setClassInformation(ClassInformationModel classInformation) {
		this.classInformation = classInformation;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "session_code", nullable = false)
	public SessionDetailsModel getSessionDetails() {
		return this.sessionDetails;
	}

	public void setSessionDetails(SessionDetailsModel sessionDetails) {
		this.sessionDetails = sessionDetails;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "section_code", nullable = false)
	public SectionInformationModel getSectionInformation() {
		return this.sectionInformation;
	}

	public void setSectionInformation(SectionInformationModel sectionInformation) {
		this.sectionInformation = sectionInformation;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "admission_date", length = 0)
	public Date getAdmissionDate() {
		return this.admissionDate;
	}

	public void setAdmissionDate(Date admissionDate) {
		this.admissionDate = admissionDate;
	}

	@Column(name = "created_by", length = 50)
	public String getCreatedBy() {
		return this.createdBy;
	}

	public void setCreatedBy(String createdBy) {
		this.createdBy = createdBy;
	}

	@Column(name = "roll_no", nullable = false)
	public Integer getRollNo() {
		return this.rollNo;
	}

	public void setRollNo(Integer rollNo) {
		this.rollNo = rollNo;
	}

	@Column(name = "status", length = 1)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "student_details_id", nullable = false)
	public StudentDetailsModel getStudentDetails() {
		return this.studentDetails;
	}

	public void setStudentDetails(StudentDetailsModel studentDetails) {
		this.studentDetails = studentDetails;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "admissionDetails")
	public Set<StudentAttendanceSmsDetailsModel> getAttendanceSmsDetailses() {
		return this.attendanceSmsDetailses;
	}

	public void setAttendanceSmsDetailses(
			Set<StudentAttendanceSmsDetailsModel> attendanceSmsDetailses) {
		this.attendanceSmsDetailses = attendanceSmsDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "admissionDetails")
	public Set<StudentAttendanceEmailDetailsModel> getAttendanceEmailDetailses() {
		return this.attendanceEmailDetailses;
	}

	public void setAttendanceEmailDetailses(
			Set<StudentAttendanceEmailDetailsModel> attendanceEmailDetailses) {
		this.attendanceEmailDetailses = attendanceEmailDetailses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "admissionDetails")
	public Set<StudentAttendanceDetailsModel> getAttendanceDetailses() {
		return this.attendanceDetailses;
	}

	public void setAttendanceDetailses(
			Set<StudentAttendanceDetailsModel> attendanceDetailses) {
		this.attendanceDetailses = attendanceDetailses;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "school_code", nullable = false)
	public SchoolProfileModel getSchoolProfile() {
		return schoolProfile;
	}

	public void setSchoolProfile(SchoolProfileModel schoolProfile) {
		this.schoolProfile = schoolProfile;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_on")
	public Date getCreatedOn() {
		return createdOn;
	}

	public void setCreatedOn(Date createdOn) {
		this.createdOn = createdOn;
	}

	@Column(name = "modified_by", length = 50)
	public String getModifiedBy() {
		return this.modifiedBy;
	}

	public void setModifiedBy(String modifiedBy) {
		this.modifiedBy = modifiedBy;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "modified_on")
	public Date getModifiedOn() {
		return this.modifiedOn;
	}

	public void setModifiedOn(Date modifiedOn) {
		this.modifiedOn = modifiedOn;
	}
	
	
}
