package com.school.common.model;

// Generated Jul 5, 2016 5:14:02 PM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * SchoolProfile generated by hbm2java
 */
@Entity
@Table(name = "school_profile")
@Cache(usage = CacheConcurrencyStrategy.READ_ONLY, region = "schoolProfile")
public class SchoolProfileModel implements java.io.Serializable {

	private static final long serialVersionUID = 1L;
	private String schoolCode;
	private String address;
	private String city;
	private String district;
	private String email;
	private String fax;
	private String logo;
	private String name;
	private String phone;
	private String postcode;
	private String registrationDate;
	private String startYear;
	private String state;
	private String website;
	private Set<ClassSectionModel> classSections = new HashSet<ClassSectionModel>(0);
	private Set<ClassFeeCategoryModel> classFeeCategory = new HashSet<ClassFeeCategoryModel>(0);
	private Set<UserDetailsModel> userDetailses = new HashSet<UserDetailsModel>(0);
	private Set<SchoolSessionModel> schoolSessions = new HashSet<SchoolSessionModel>(0);
	private Set<AdmissionNumberModel> admissionNumbers = new HashSet<AdmissionNumberModel>(0);
	private Set<AdmissionDetailsModel> admissionDetailses = new HashSet<AdmissionDetailsModel>(0);
	private Set<ClassSubjectModel> classSubject = new HashSet<ClassSubjectModel>(0);
	private Set<SchoolPaymentCategoryModel> schoolPaymentCategories = new HashSet<SchoolPaymentCategoryModel>(0);
	private Set<GlobalConfigModel> globalConfigs = new HashSet<GlobalConfigModel>(0);
	private Set<UniqueIdModel> uniqueIds = new HashSet<UniqueIdModel>(0);
	private Set<ApplicationSettingsModel> applicationSettings = new HashSet<ApplicationSettingsModel>(0);
	private Set<TransportModel> Transports = new HashSet<TransportModel>(0);
	private Set<ReportCardConfigModel> reportCardConfigs = new HashSet<ReportCardConfigModel>(0);

	public SchoolProfileModel() {
	}
	
	public SchoolProfileModel(String schoolCode) {
		this.schoolCode = schoolCode;
	}

	public SchoolProfileModel(String schoolCode, String address, String logo,
			String name, String state) {
		this.schoolCode = schoolCode;
		this.address = address;
		this.logo = logo;
		this.name = name;
		this.state = state;
	}

	public SchoolProfileModel(String schoolCode, String address, String city,
			String district, String email, String fax, String logo,
			String name, String phone, String postcode,
			String registrationDate, String startYear, String state,
			String website, Set<ClassSectionModel> classSections, Set<UserDetailsModel> userDetailses,
			Set<SchoolSessionModel> schoolSessions, Set<AdmissionDetailsModel> admissionDetailses,
			Set<ClassSubjectModel> classSubject, Set<SchoolPaymentCategoryModel> schoolPaymentCategories,
			Set<GlobalConfigModel> globalConfigs, Set<UniqueIdModel> uniqueIds) {
		this.schoolCode = schoolCode;
		this.address = address;
		this.city = city;
		this.district = district;
		this.email = email;
		this.fax = fax;
		this.logo = logo;
		this.name = name;
		this.phone = phone;
		this.postcode = postcode;
		this.registrationDate = registrationDate;
		this.startYear = startYear;
		this.state = state;
		this.website = website;
		this.classSections = classSections;
		this.userDetailses = userDetailses;
		this.schoolSessions = schoolSessions;
		this.admissionDetailses = admissionDetailses;
		this.classSubject = classSubject;
		this.schoolPaymentCategories = schoolPaymentCategories;
		this.globalConfigs = globalConfigs;
		this.uniqueIds = uniqueIds;
	}

	@Id
	@Column(name = "school_code", unique = true, nullable = false, length = 5)
	public String getSchoolCode() {
		return this.schoolCode;
	}

	public void setSchoolCode(String schoolCode) {
		this.schoolCode = schoolCode;
	}

	@Column(name = "address", nullable = false)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "city", length = 50)
	public String getCity() {
		return this.city;
	}

	public void setCity(String city) {
		this.city = city;
	}

	@Column(name = "district", length = 50)
	public String getDistrict() {
		return this.district;
	}

	public void setDistrict(String district) {
		this.district = district;
	}

	@Column(name = "email", length = 50)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "fax", length = 15)
	public String getFax() {
		return this.fax;
	}

	public void setFax(String fax) {
		this.fax = fax;
	}

	@Column(name = "logo", nullable = true, length = 15)
	public String getLogo() {
		return this.logo;
	}

	public void setLogo(String logo) {
		this.logo = logo;
	}

	@Column(name = "name", nullable = false)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "phone", length = 15)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "postcode", length = 6)
	public String getPostcode() {
		return this.postcode;
	}

	public void setPostcode(String postcode) {
		this.postcode = postcode;
	}

	@Column(name = "registration_date", length = 15)
	public String getRegistrationDate() {
		return this.registrationDate;
	}

	public void setRegistrationDate(String registrationDate) {
		this.registrationDate = registrationDate;
	}

	@Column(name = "start_year", length = 15)
	public String getStartYear() {
		return this.startYear;
	}

	public void setStartYear(String startYear) {
		this.startYear = startYear;
	}

	@Column(name = "state", nullable = false)
	public String getState() {
		return this.state;
	}

	public void setState(String state) {
		this.state = state;
	}

	@Column(name = "website", length = 50)
	public String getWebsite() {
		return this.website;
	}

	public void setWebsite(String website) {
		this.website = website;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "schoolProfile", cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<ClassSectionModel> getClassSections() {
		return this.classSections;
	}

	public void setClassSections(Set<ClassSectionModel> classSections) {
		this.classSections = classSections;
	}
	
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "schoolProfile", cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<ClassFeeCategoryModel> getClassFeeCategory() {
		return classFeeCategory;
	}

	public void setClassFeeCategory(Set<ClassFeeCategoryModel> classFeeCategory) {
		this.classFeeCategory = classFeeCategory;
	}

	@OneToMany(mappedBy = "schoolProfile", fetch = FetchType.LAZY, cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<UserDetailsModel> getUserDetailses() {
		return userDetailses;
	}

	public void setUserDetailses(Set<UserDetailsModel> userDetailses) {
		this.userDetailses = userDetailses;
	}

	@OneToMany(mappedBy = "schoolProfile", fetch = FetchType.LAZY, cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<SchoolSessionModel> getSchoolSessions() {
		return schoolSessions;
	}

	public void setSchoolSessions(Set<SchoolSessionModel> schoolSessions) {
		this.schoolSessions = schoolSessions;
	}

	@OneToMany(mappedBy = "schoolProfile", fetch = FetchType.LAZY, cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<AdmissionDetailsModel> getAdmissionDetailses() {
		return admissionDetailses;
	}

	public void setAdmissionDetailses(Set<AdmissionDetailsModel> admissionDetailses) {
		this.admissionDetailses = admissionDetailses;
	}


	@OneToMany(mappedBy = "schoolProfile", fetch = FetchType.LAZY, cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<AdmissionNumberModel> getAdmissionNumbers() {
		return admissionNumbers;
	}

	public void setAdmissionNumbers(Set<AdmissionNumberModel> admissionNumbers) {
		this.admissionNumbers = admissionNumbers;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "schoolProfile", cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<ClassSubjectModel> getClassSubject() {
		return classSubject;
	}

	public void setClassSubject(Set<ClassSubjectModel> classSubject) {
		this.classSubject = classSubject;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "schoolProfile", cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<SchoolPaymentCategoryModel> getSchoolPaymentCategories() {
		return schoolPaymentCategories;
	}

	public void setSchoolPaymentCategories(Set<SchoolPaymentCategoryModel> schoolPaymentCategories) {
		this.schoolPaymentCategories = schoolPaymentCategories;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "schoolProfile", cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<GlobalConfigModel> getGlobalConfigs() {
		return globalConfigs;
	}

	public void setGlobalConfigs(Set<GlobalConfigModel> globalConfigs) {
		this.globalConfigs = globalConfigs;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "schoolProfile", cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<UniqueIdModel> getUniqueIds() {
		return uniqueIds;
	}

	public void setUniqueIds(Set<UniqueIdModel> uniqueIds) {
		this.uniqueIds = uniqueIds;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "schoolProfile", cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<ApplicationSettingsModel> getApplicationSettings() {
		return applicationSettings;
	}

	public void setApplicationSettings(
			Set<ApplicationSettingsModel> applicationSettings) {
		this.applicationSettings = applicationSettings;
	}

	/**
	 * @return the transports
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "schoolProfile", cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<TransportModel> getTransports() {
		return Transports;
	}

	/**
	 * @param transports the transports to set
	 */
	public void setTransports(Set<TransportModel> transports) {
		Transports = transports;
	}

	/**
	 * @return the reportCardConfigs
	 */
	@OneToMany(fetch = FetchType.LAZY, mappedBy = "schoolProfile", cascade = CascadeType.ALL, orphanRemoval = true)
	public Set<ReportCardConfigModel> getReportCardConfigs() {
		return reportCardConfigs;
	}

	/**
	 * @param reportCardConfigs the reportCardConfigs to set
	 */
	public void setReportCardConfigs(Set<ReportCardConfigModel> reportCardConfigs) {
		this.reportCardConfigs = reportCardConfigs;
	}
	
	
	
	
}
