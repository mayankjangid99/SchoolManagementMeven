package com.school.common.model;

// Generated Apr 2, 2016 3:30:20 PM by Hibernate Tools 4.3.1

import static javax.persistence.GenerationType.IDENTITY;

import java.util.HashSet;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;

import com.school.common.micro.model.MicroEntityModel;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "user")
public class UserModel extends MicroEntityModel implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	
	private Long userId;
	private UserRoleModel userRole;
	private UserDetailsModel userDetails;
	private boolean active;
	private String code;	
	private String ip;
	private String password;
	private String salt;
	private String username;
	private boolean login;
	private Set<UserCheckInModel> userCheckIns = new HashSet<UserCheckInModel>(
			0);
	private Set<UserAttendanceDetailsModel> userAttendanceDetailses = new HashSet<UserAttendanceDetailsModel>(
			0);

	public UserModel() {
	}

	public UserModel(UserRoleModel userRole, boolean active, boolean login, String password, String username, UserDetailsModel userDetails,
			Set<UserCheckInModel> userCheckIns, Set<UserAttendanceDetailsModel> userAttendanceDetailses) {
		this.userRole = userRole;
		this.active = active;
		this.login = login;
		this.password = password;
		this.username = username;
		this.userDetails = userDetails;
		this.userCheckIns = userCheckIns;
		this.userAttendanceDetailses = userAttendanceDetailses;
	}

	public UserModel(UserRoleModel userRole, boolean active, boolean login, String code, String password, String salt, String ip,
			String username, UserDetailsModel userDetails,
			Set<UserCheckInModel> userCheckIns, Set<UserAttendanceDetailsModel> userAttendanceDetailses) {
		this.userRole = userRole;
		this.active = active;
		this.login = login;
		this.code = code;
		this.ip = ip;
		this.password = password;
		this.salt = salt;
		this.username = username;
		this.userDetails = userDetails;
		this.userCheckIns = userCheckIns;
		this.userAttendanceDetailses = userAttendanceDetailses;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "user_id", unique = true, nullable = false)
	public Long getUserId() {
		return this.userId;
	}

	public void setUserId(Long userId) {
		this.userId = userId;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_role_id", nullable = false)
	public UserRoleModel getUserRole() {
		return this.userRole;
	}

	public void setUserRole(UserRoleModel userRole) {
		this.userRole = userRole;
	}

	@Column(name = "active", nullable = false)
	public boolean isActive() {
		return this.active;
	}

	public void setActive(boolean active) {
		this.active = active;
	}

	@Column(name = "code", length = 40)
	public String getCode() {
		return this.code;
	}

	public void setCode(String code) {
		this.code = code;
	}

	@Column(name = "ip", length = 40)
	public String getIp() {
		return this.ip;
	}

	public void setIp(String ip) {
		this.ip = ip;
	}

	@Column(name = "password", nullable = false, length = 150)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "salt", length = 20)
	public String getSalt() {
		return this.salt;
	}

	public void setSalt(String salt) {
		this.salt = salt;
	}

	@Column(name = "username", nullable = false, unique = true, length = 50)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}
	

	@OneToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user_details_id", nullable = false)
	public UserDetailsModel getUserDetails() {
		return userDetails;
	}

	public void setUserDetails(UserDetailsModel userDetails) {
		this.userDetails = userDetails;
	}

	@Column(name = "login", nullable = false)
	public boolean isLogin() {
		return login;
	}

	public void setLogin(boolean login) {
		this.login = login;
	}

	@OneToMany(mappedBy = "user", fetch = FetchType.LAZY)	
	public Set<UserCheckInModel> getUserCheckIns() {
		return userCheckIns;
	}

	public void setUserCheckIns(Set<UserCheckInModel> userCheckIns) {
		this.userCheckIns = userCheckIns;
	}

	@OneToMany(mappedBy = "user", fetch = FetchType.LAZY)
	public Set<UserAttendanceDetailsModel> getUserAttendanceDetailses() {
		return userAttendanceDetailses;
	}

	public void setUserAttendanceDetailses(
			Set<UserAttendanceDetailsModel> userAttendanceDetailses) {
		this.userAttendanceDetailses = userAttendanceDetailses;
	}

	
	
	
	

}
